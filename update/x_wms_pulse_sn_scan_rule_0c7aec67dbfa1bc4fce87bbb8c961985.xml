<?xml version="1.0" encoding="UTF-8"?><record_update table="x_wms_pulse_sn_scan_rule">
    <x_wms_pulse_sn_scan_rule action="INSERT_OR_UPDATE">
        <active>true</active>
        <advanced>true</advanced>
        <applies_to/>
        <condition/>
        <impact_level>high</impact_level>
        <impact_type>best_practices</impact_type>
        <recommendation>Deleting a variable will delete existing values in that variable. Best to set active=false when deploying to an in-use catalog item</recommendation>
        <script><![CDATA[// Result should be an array of findings
// A finding should have the following attributes: impact_type, impact_level, record_table, record_sys_id and recommendation
// Before returning result, JSON.stringify it.
// Example: result = '[{"impact_type":"Consistency","impact_level":"High","record_sys_id":"69df2b704fbc620024cf4e328110c7f5","record_table":"ldap_ou_config","recommendation":"Version in this update set is not the latest!"},{"type":"Consistency","criticality":"High","record_sys_id":"acfa8cc34f20220024cf4e328110c74f","record_table":"sys_dictionary","recommendation":"Version in this update set is not the latest!"}]';
// 'current' is the Code itself, related to the table that this applies (It's null in case you don't have a table set)
// 'update_set_item' is the sys_update_xml item
// 'setID' is the update set sys_id
	
(function (current, update_set_item, setID) {
	var grDelVariables = new GlideRecord('sys_update_xml');
	grDelVariables.addQuery('update_set', setID);
	grDelVariables.query();
	result = '';
	var findings = [];
	while (grDelVariables.next()) {
		if (grDelVariables.type == 'Variable' && grDelVariables.action == 'DELETE') {
			var finding = {
				impact_type : 'Best Practices',
				impact_level : 'High',
				update_xml_sys_id : setID,
				recommendation : 'Deleting a variable will delete existing values in that variable. Best to set active=false when deploying to an in-use catalog item.'
			};
			var file = new GlideRecord("sys_metadata");
			file.addQuery("sys_update_name", grDelVariables.name.toString());
			file.query();
			if(file.next()) {
				finding.record_sys_id = file.sys_id + '';
				finding.record_table = file.sys_class_name + '';
			} else {
				finding.record_table = grDelVariables.name.toString();
				finding.record_sys_id = 'not_found';
			}
			findings.push(finding);
		}
	}
	result = JSON.stringify(findings);

})(current, update_set_item, setID);]]></script>
        <short_description>Warn deleting  a variable from catalog item</short_description>
        <sys_class_name>x_wms_pulse_sn_scan_rule</sys_class_name>
        <sys_created_by>vn500mt</sys_created_by>
        <sys_created_on>2018-06-25 20:51:01</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>0c7aec67dbfa1bc4fce87bbb8c961985</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Warn deleting  a variable from catalog item</sys_name>
        <sys_package display_value="Pulse" source="x_wms_pulse">e970e883db6bdb0c1f0d322b7c9619a2</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Pulse">e970e883db6bdb0c1f0d322b7c9619a2</sys_scope>
        <sys_update_name>x_wms_pulse_sn_scan_rule_0c7aec67dbfa1bc4fce87bbb8c961985</sys_update_name>
        <sys_updated_by>mmoreli</sys_updated_by>
        <sys_updated_on>2019-06-13 20:13:17</sys_updated_on>
    </x_wms_pulse_sn_scan_rule>
</record_update>
