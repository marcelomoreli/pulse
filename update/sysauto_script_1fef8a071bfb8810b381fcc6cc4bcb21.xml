<?xml version="1.0" encoding="UTF-8"?><record_update table="sysauto_script">
    <sysauto_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <business_calendar/>
        <condition/>
        <conditional>false</conditional>
        <entered_time/>
        <name>Aged Pulse Requests</name>
        <run_as display_value="System Administrator">6816f79cc0a8016401c5a33be04be441</run_as>
        <run_as_tz/>
        <run_dayofmonth>1</run_dayofmonth>
        <run_dayofweek>1</run_dayofweek>
        <run_period/>
        <run_start>2020-03-31 15:04:30</run_start>
        <run_time>1970-01-01 06:01:00</run_time>
        <run_type>daily</run_type>
        <script><![CDATA[function dealWithAgedPulse() {
    var pulseUtils = new x_wms_pulse.PulseUtils();
    var config = JSON.parse(gs.getProperty('x_wms_pulse.aged_requests_config'));
    var currDate = new GlideDateTime();
    var filterDate = new GlideDateTime();
    filterDate.addDaysUTC(parseInt(config.notify_after) * -1);

    var grPulseReqs = new GlideRecord('x_wms_pulse_dev_request');
    grPulseReqs.addQuery('active', 'true');
    grPulseReqs.addQuery('expected_start', '<=', filterDate);
    grPulseReqs.query();

    while (grPulseReqs.next()) {
        var lastChange = new GlideDateTime();
        lastChange.setValue(grPulseReqs.expected_start);
        var calcDate = new GlideDateTime();
        calcDate.setValue(config.base_date);
        if (calcDate < lastChange) {
            calcDate = lastChange;
        }
        var difference = GlideDateTime.subtract(calcDate, currDate);
        var diffDays = parseInt(difference.getDayPart());
        if (diffDays >= parseInt(config.discard_after)) {
            if (grPulseReqs.state != DevRequestStates.MOVING_TO_IGNORE) { // Discard it if it's already backed up
                grPulseReqs.setValue('state', DevRequestStates.MOVING_TO_IGNORE);
                grPulseReqs.update();
            }
        } else {
            if (diffDays >= parseInt(config.notify_after)) {
                if (diffDays % 7 == 0) { // Send notification once a week
                    gs.eventQueue('x_wms_pulse.aged', grPulseReqs, gs.getUserID(), grPulseReqs.getValue('application'));
                }
            }
        }
    }
}
dealWithAgedPulse();]]></script>
        <sys_class_name>sysauto_script</sys_class_name>
        <sys_created_by>mmoreli</sys_created_by>
        <sys_created_on>2020-03-31 15:05:08</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>1fef8a071bfb8810b381fcc6cc4bcb21</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Aged Pulse Requests</sys_name>
        <sys_package display_value="Pulse" source="x_wms_pulse">e970e883db6bdb0c1f0d322b7c9619a2</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Pulse">e970e883db6bdb0c1f0d322b7c9619a2</sys_scope>
        <sys_update_name>sysauto_script_1fef8a071bfb8810b381fcc6cc4bcb21</sys_update_name>
        <sys_updated_by>mmoreli</sys_updated_by>
        <sys_updated_on>2020-03-31 15:05:08</sys_updated_on>
        <time_zone/>
        <upgrade_safe>false</upgrade_safe>
    </sysauto_script>
</record_update>
