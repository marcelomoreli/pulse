<?xml version="1.0" encoding="UTF-8"?><record_update table="x_wms_pulse_sn_scan_rule">
    <x_wms_pulse_sn_scan_rule action="INSERT_OR_UPDATE">
        <active>true</active>
        <advanced>true</advanced>
        <applies_to/>
        <condition/>
        <impact_level>low</impact_level>
        <impact_type>info</impact_type>
        <recommendation/>
        <script><![CDATA[// Result should be an array of findings
// A finding should have the following attributes: impact_type, impact_level, record_table, record_sys_id and recommendation
// Before returning result, JSON.stringify it.
// Example: result = '[{"impact_type":"Consistency","impact_level":"High","record_sys_id":"69df2b704fbc620024cf4e328110c7f5","record_table":"ldap_ou_config","recommendation":"Version in this update set is not the latest!"},{"type":"Consistency","criticality":"High","record_sys_id":"acfa8cc34f20220024cf4e328110c74f","record_table":"sys_dictionary","recommendation":"Version in this update set is not the latest!"}]';
// 'current' is the Code itself, related to the table that this applies (It's null in case you don't have a table set)
// 'update_set_item' is the sys_update_xml item
// 'setID' is the update set sys_id
	
(function (current, update_set_item, setID) {
	var safe = true;
	var findings = [];
	var allowedTypes = ['Catalog Item',
						'Catalog Item Available for',
						'Catalog Item Category',
						'Catalog Items Catalog',
						'Assignment Rule',
						'Variable',
						'Question Choice',
						'Order guide',
						'Catalog Variable Set',
						'Catalog UI Policy',
						'Catalog UI Policy Action',
						'Translated Text',
						'Translated Name / Field',
						'Message',
						'Catalog Table Column',
						'Catalog Table Variable',
						'HR Service',
						'HR Template',
						];
	var usContent = new GlideRecord('sys_update_xml');
	usContent.addQuery('update_set', setID);
	usContent.query();
	while(usContent.next()){
		if (allowedTypes.indexOf(usContent.type + '') < 0) {
			safe = false;
			break;
		}
	}
	
	if (safe) {
		var finding = {
			impact_type : 'Info',
			impact_level : 'None',
			update_xml_sys_id : setID,
			recommendation : 'This update set does not need code review since there is no code involved.',
			record_sys_id : 'record]',
			record_table : '[No'
		};
		
		findings.push(finding);
	}
	
	result = JSON.stringify(findings);
	
})(current, update_set_item, setID);]]></script>
        <short_description>Check if can be auto-approved</short_description>
        <sys_class_name>x_wms_pulse_sn_scan_rule</sys_class_name>
        <sys_created_by>mmoreli</sys_created_by>
        <sys_created_on>2018-06-22 19:00:13</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>8ff179aedb72df4435137f698c9619e3</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>Check if can be auto-approved</sys_name>
        <sys_package display_value="Pulse" source="x_wms_pulse">e970e883db6bdb0c1f0d322b7c9619a2</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Pulse">e970e883db6bdb0c1f0d322b7c9619a2</sys_scope>
        <sys_update_name>x_wms_pulse_sn_scan_rule_8ff179aedb72df4435137f698c9619e3</sys_update_name>
        <sys_updated_by>mmoreli</sys_updated_by>
        <sys_updated_on>2019-06-13 20:13:56</sys_updated_on>
    </x_wms_pulse_sn_scan_rule>
</record_update>
