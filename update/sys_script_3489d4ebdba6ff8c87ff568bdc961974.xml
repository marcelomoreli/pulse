<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sysapproval_approver</collection>
        <condition>gs.getProperty('x_wms_pulse.allow_self_approve') == 'false' &amp;&amp; (current.state == 'approved' &amp;&amp; previous.state != 'approved')</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="sysapproval_approver">sysapproval.sys_class_name=x_wms_pulse_dev_request^EQ<item display_value="x_wms_pulse_dev_request" endquery="false" field="sysapproval.sys_class_name" goto="false" newquery="false" operator="=" or="false" value="x_wms_pulse_dev_request"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Prevent Self Approval</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	var getTask = new GlideRecord('x_wms_pulse_dev_request');
	getTask.addQuery('sys_id',current.sysapproval);
	getTask.query();
	if(getTask.next()){
		var usr = gs.getUserID();
		if (usr == getTask.getValue('assigned_to') || getTask.getValue('additional_assignee_list').indexOf(usr) > -1) {
			gs.addErrorMessage(gs.getMessage('Self-approval is not permitted. Approval set back to {0}. ', previous.state.getDisplayValue()));
			current.state = previous.state;
			current.setAbortAction(true);
		}
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>mmoreli</sys_created_by>
        <sys_created_on>2019-07-15 20:32:58</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>3489d4ebdba6ff8c87ff568bdc961974</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>Prevent Self Approval</sys_name>
        <sys_overrides/>
        <sys_package display_value="Pulse" source="x_wms_pulse">e970e883db6bdb0c1f0d322b7c9619a2</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Pulse">e970e883db6bdb0c1f0d322b7c9619a2</sys_scope>
        <sys_update_name>sys_script_3489d4ebdba6ff8c87ff568bdc961974</sys_update_name>
        <sys_updated_by>mmoreli</sys_updated_by>
        <sys_updated_on>2019-09-09 19:20:52</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=3489d4ebdba6ff8c87ff568bdc961974"/>
</record_update>
